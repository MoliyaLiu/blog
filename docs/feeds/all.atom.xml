<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Matthew Kudija</title><link href="http://matthewkudija.com/blog/" rel="alternate"></link><link href="http://matthewkudija.com/blog/feeds/all.atom.xml" rel="self"></link><id>http://matthewkudija.com/blog/</id><updated>2019-03-30T06:00:00-04:00</updated><entry><title>Share Your Work Online</title><link href="http://matthewkudija.com/blog/2019/03/30/share-online/" rel="alternate"></link><published>2019-03-30T06:00:00-04:00</published><updated>2019-03-30T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2019-03-30:blog/2019/03/30/share-online/</id><summary type="html">

&lt;p&gt;Building a basic website is an important skill for the entrepreneur, employee, and citizen of the Internet. Using these skills to share your work online has benefits to you and others that justify the costs in time and effort required to do so. And sharing from your own domain gives you control over your data and teaches you about how the internet works.&lt;/p&gt;
&lt;p&gt;My time spent "learning in public" so far has taught me a lot and also helped out some other like-minded strangers on the internet.&lt;sup id="fnref-nadiaeghbal"&gt;&lt;a class="footnote-ref" href="#fn-nadiaeghbal"&gt;1&lt;/a&gt;&lt;/sup&gt; I hope to share how you can experience this as well.&lt;/p&gt;
</summary><category term="gh-pages"></category><category term="python"></category><category term="html"></category><category term="css"></category><category term="javascript"></category><category term="web"></category></entry><entry><title>Analytics Principles</title><link href="http://matthewkudija.com/blog/2019/02/15/analytics-principles/" rel="alternate"></link><published>2019-02-15T06:00:00-05:00</published><updated>2019-02-15T06:00:00-05:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2019-02-15:blog/2019/02/15/analytics-principles/</id><summary type="html">

&lt;p&gt;These principles are best practices developed over several years of building analytics tools and delivering analytics projects. These principles are by no means perfect, but if you find yourself violating one of them it is a good opportunity to step back and ask yourself why that is the case and how your process can be improved.&lt;/p&gt;
&lt;p&gt;Principles are presented in categories to align with the general delineation of data, analysis, and visualization. However, this distinction is arbitrary and principles may apply to activities in multiple categories.&lt;/p&gt;
</summary><category term="principles"></category><category term="analytics"></category></entry><entry><title>Matplotlib: Multiple Y-Axis Scales</title><link href="http://matthewkudija.com/blog/2019/02/13/matplotlib-twin-axes/" rel="alternate"></link><published>2019-02-13T06:00:00-05:00</published><updated>2019-02-13T06:00:00-05:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2019-02-13:blog/2019/02/13/matplotlib-twin-axes/</id><summary type="html">

&lt;!-- ![alt]({filename}/downloads/code/matplotlib-twin-axes/matplotlib-twin-axes.png) --&gt;

&lt;p style="text-align:center;"&gt;&lt;img src="http://matthewkudija.com/blog/downloads/code/matplotlib-twin-axes/matplotlib-twin-axes.png" width="75%" height="75%"&gt;&lt;/p&gt;

&lt;p&gt;Matplotlib's flexibility allows you to show a second scale on the y-axis. This example allows us to show monthly data with the corresponding annual total at those monthly rates. &lt;/p&gt;
</summary><category term="python"></category><category term="matplotlib"></category></entry><entry><title>Highlighting States With Cartopy</title><link href="http://matthewkudija.com/blog/2019/01/15/state-maps/" rel="alternate"></link><published>2019-01-15T06:00:00-05:00</published><updated>2019-01-15T06:00:00-05:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2019-01-15:blog/2019/01/15/state-maps/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/downloads/code/state-maps/13 Original Colonies.png"&gt;&lt;/p&gt;
&lt;!-- &lt;p style="text-align:center;"&gt;&lt;img src="http://matthewkudija.com/blog/downloads/code/country-maps/maps/EU-Members.png" width="75%" height="75%"&gt;&lt;/p&gt; --&gt;

&lt;p&gt;Here is how to highlight select US States with Cartopy. (You can also &lt;a href="https://matthewkudija.com/blog/2018/05/25/country-maps/"&gt;highlight select countries with Cartopy&lt;/a&gt;.)&lt;/p&gt;
</summary><category term="python"></category><category term="cartopy"></category><category term="map"></category><category term="matplotlib"></category></entry><entry><title>Python with the Google Maps API</title><link href="http://matthewkudija.com/blog/2018/11/19/google-maps-api/" rel="alternate"></link><published>2018-11-19T06:00:00-05:00</published><updated>2018-11-19T06:00:00-05:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-11-19:blog/2018/11/19/google-maps-api/</id><summary type="html">

&lt;p style="text-align:center;"&gt;&lt;img src="http://matthewkudija.com/blog/downloads/code/google-maps-api/googleMaps.png" width="100%" height="100%"&gt;&lt;/p&gt;

&lt;p&gt;The Google Maps Platform offers a number of APIs to get maps, routes, and places information. In this example, I will demonstrate how to get coordinates of an address using the Geocoding API.&lt;/p&gt;
</summary><category term="Google Maps API"></category><category term="python"></category><category term="map"></category></entry><entry><title>GitHub Pages Example</title><link href="http://matthewkudija.com/blog/2018/10/27/github-pages-example/" rel="alternate"></link><published>2018-10-27T06:00:00-04:00</published><updated>2018-10-27T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-10-27:blog/2018/10/27/github-pages-example/</id><summary type="html">

&lt;p style="text-align:center;"&gt;&lt;img src="http://matthewkudija.com/blog/images/github-pages-example.png" width="100%" height="100%"&gt;&lt;/p&gt;

&lt;p&gt;I wrote a quick overview of setting up a simple static website on GitHub Pages. Have a look here: &lt;a href="https://matthewkudija.com/GitHub-Pages-Example/"&gt;&lt;strong&gt;&lt;code&gt;https://matthewkudija.com/GitHub-Pages-Example/&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can view the source code for this example website &lt;a href="https://github.com/mkudija/GitHub-Pages-Example/"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
</summary><category term="GitHub Pages"></category><category term="python"></category><category term="web"></category></entry><entry><title>Book Value vs. Market Value Exposure Report</title><link href="http://matthewkudija.com/blog/2018/08/30/exposure-report/" rel="alternate"></link><published>2018-08-30T06:00:00-04:00</published><updated>2018-08-30T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-08-30:blog/2018/08/30/exposure-report/</id><summary type="html">

&lt;p style="text-align:center;"&gt;&lt;img src="http://matthewkudija.com/blog/downloads/code/exposure-report/exposure-report.png" width="100%" height="100%"&gt;&lt;/p&gt;

&lt;p&gt;It is important for a capital business to understand the exposure on its books. Here is a quick visualization of exposure vs. market value using matplotlib. &lt;/p&gt;
</summary><category term="python"></category><category term="matplotlib"></category></entry><entry><title>Visualizing An Infant's Schedule</title><link href="http://matthewkudija.com/blog/2018/08/21/baby-schedule/" rel="alternate"></link><published>2018-08-21T06:00:00-04:00</published><updated>2018-08-21T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-08-21:blog/2018/08/21/baby-schedule/</id><summary type="html">

&lt;p style="text-align:center;"&gt;&lt;img src="http://matthewkudija.com/blog/downloads/code/baby-schedule/plot_all_radial.png" width="75%" height="75%"&gt;&lt;/p&gt;

&lt;p&gt;A newborn may only eat, sleep, and poop, but they sure do it a lot! Here is a sample of two weeks of an an infant's schedule visualized with matplotlib.&lt;/p&gt;
</summary><category term="python"></category><category term="matplotlib"></category></entry><entry><title>Diff Two Excel Files with Python</title><link href="http://matthewkudija.com/blog/2018/07/21/excel-diff/" rel="alternate"></link><published>2018-07-21T06:00:00-04:00</published><updated>2018-07-21T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-07-21:blog/2018/07/21/excel-diff/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/downloads/code/excel-diff/images/excel-diff1.png"&gt;&lt;/p&gt;
&lt;p&gt;It's handy to be able to quickly find the differences between two Excel files. Below is a quick example of doing so using Python and pandas. &lt;/p&gt;
</summary><category term="python"></category><category term="pandas"></category><category term="excel"></category></entry><entry><title>US Airports and Heliports</title><link href="http://matthewkudija.com/blog/2018/07/03/us-airports/" rel="alternate"></link><published>2018-07-03T06:00:00-04:00</published><updated>2018-07-03T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-07-03:blog/2018/07/03/us-airports/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/images/us-heliports.png"&gt;&lt;/p&gt;
&lt;p&gt;In a &lt;a href="http://matthewkudija.com/blog/2018/06/22/altair-interactive/#airports-example"&gt;previous post&lt;/a&gt; I used Altair to plot an interactive map of US airports using data from &lt;a href="https://github.com/vega/vega-datasets"&gt;vega examples&lt;/a&gt;. I found another dataset that includes airport elevation which makes exploring the data all the more interesting.&lt;/p&gt;
</summary><category term="python"></category><category term="altair"></category><category term="vega"></category><category term="interactive"></category><category term="map"></category></entry><entry><title>Altair: Interactive Plots on the Web</title><link href="http://matthewkudija.com/blog/2018/06/22/altair-interactive/" rel="alternate"></link><published>2018-06-22T06:00:00-04:00</published><updated>2018-06-22T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-06-22:blog/2018/06/22/altair-interactive/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/images/altair-interactive.png"&gt;&lt;/p&gt;
&lt;p&gt;Adding interactivity to data visualizations can be helpful for better exploring the data and fun. Sharing interactive visualizations online extends the benefits to others. In this post I will show some examples of using the Altair library to create and share some simple interactive visualizations. The examples below are largely derived from the excellent Altair &lt;a href="https://altair-viz.github.io/gallery/index.html"&gt;gallery&lt;/a&gt;—I claim no original work on these but enjoyed working with them to learn the mechanics of interactive visualization in Altair. &lt;/p&gt;
</summary><category term="python"></category><category term="altair"></category><category term="vega"></category><category term="interactive"></category></entry><entry><title>Automation Using Python</title><link href="http://matthewkudija.com/blog/2018/06/08/python-automation/" rel="alternate"></link><published>2018-06-08T06:00:00-04:00</published><updated>2018-06-08T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-06-08:blog/2018/06/08/python-automation/</id><summary type="html">

&lt;p&gt;I previously wrote about &lt;a href="http://matthewkudija.com/blog/2018/03/15/makefile-automation/"&gt;automation using Makefiles&lt;/a&gt; to bundle together running multiple scripts into a single command. Using the subprocess library we can perform the same tasks entirely in Python.&lt;/p&gt;
</summary><category term="python"></category><category term="makefile"></category><category term="make"></category><category term="automation"></category><category term="subprocess"></category></entry><entry><title>Highlighting Countries With Cartopy</title><link href="http://matthewkudija.com/blog/2018/05/25/country-maps/" rel="alternate"></link><published>2018-05-25T06:00:00-04:00</published><updated>2018-05-25T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-05-25:blog/2018/05/25/country-maps/</id><summary type="html">

&lt;!-- ![alt]({filename}/downloads/code/country-maps/maps/EU-Members.png) --&gt;

&lt;p style="text-align:center;"&gt;&lt;img src="http://matthewkudija.com/blog/downloads/code/country-maps/maps/EU-Members.png" width="75%" height="75%"&gt;&lt;/p&gt;

&lt;p&gt;Here is how to highlight select countries with Cartopy. (You can also &lt;a href="https://matthewkudija.com/blog/2019/01/15/state-maps/"&gt;highlight select states with Cartopy&lt;/a&gt;.)&lt;/p&gt;
</summary><category term="python"></category><category term="cartopy"></category><category term="map"></category><category term="matplotlib"></category></entry><entry><title>Standard Maps with Cartopy</title><link href="http://matthewkudija.com/blog/2018/05/22/standard-maps/" rel="alternate"></link><published>2018-05-22T06:00:00-04:00</published><updated>2018-05-22T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-05-22:blog/2018/05/22/standard-maps/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/downloads/code/standard-maps/maps/world_Robinson_blue.png"&gt;&lt;/p&gt;
&lt;p&gt;Here are some examples of base world maps (excluding Antarctica which is cropped out) using Cartopy.&lt;/p&gt;
</summary><category term="python"></category><category term="cartopy"></category><category term="map"></category><category term="matplotlib"></category></entry><entry><title>Digitize a Graph</title><link href="http://matthewkudija.com/blog/2018/05/05/digitize-graph/" rel="alternate"></link><published>2018-05-05T06:00:00-04:00</published><updated>2018-05-05T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-05-05:blog/2018/05/05/digitize-graph/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/images/digitize-graph/Playfair_extracted.png"&gt;&lt;/p&gt;
&lt;p&gt;I recently needed to extract data from the screenshot of a graph. The data was provided by a third party in that format so I had to work with what I was given.&lt;/p&gt;
</summary><category term="python"></category><category term="pynput"></category></entry><entry><title>Build Log: Bookshelf</title><link href="http://matthewkudija.com/blog/2018/04/30/bookshelf/" rel="alternate"></link><published>2018-04-30T06:00:00-04:00</published><updated>2018-04-30T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-04-30:blog/2018/04/30/bookshelf/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/images/bookshelf/bookshelf_final.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Moving into a new house comes with lots of projects: the most important of which, naturally, involve bookshelves and books. This build log chronicles the design, construction, and expansion of a large bookshelf.&lt;/p&gt;
</summary><category term="build log"></category><category term="wood"></category><category term="bookshelf"></category></entry><entry><title>Travel Map With Cartopy</title><link href="http://matthewkudija.com/blog/2018/04/21/travel-map-cartopy/" rel="alternate"></link><published>2018-04-21T06:00:00-04:00</published><updated>2018-04-21T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-04-21:blog/2018/04/21/travel-map-cartopy/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/downloads/notebooks/travel-map-cartopy/2018_Travel.png"&gt;&lt;/p&gt;
&lt;p&gt;In a &lt;a href="http://matthewkudija.com/blog/2016/12/17/travel-map/"&gt;former post&lt;/a&gt; I generated a travel map plotted with Basemap. From the &lt;a href="https://matplotlib.org/basemap/users/intro.html#cartopy-new-management-and-eol-announcement"&gt;Basemap documentation&lt;/a&gt;, however, Cartopy will replace Basemap:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Starting in 2016, Basemap came under new management. The Cartopy project will replace Basemap, but it hasn’t yet implemented all of Basemap’s features. All new software development should try to use Cartopy whenever possible, and existing software should start the process of switching over to use Cartopy. All maintenance and development efforts should be focused on Cartopy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this post, I generate a similar travel map using Cartopy.&lt;/p&gt;
</summary><category term="cartopy"></category><category term="map"></category><category term="python"></category><category term="matplotlib"></category></entry><entry><title>Table Filtering in HTML and JavaScript</title><link href="http://matthewkudija.com/blog/2018/04/03/filter-table/" rel="alternate"></link><published>2018-04-03T06:00:00-04:00</published><updated>2018-04-03T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-04-03:blog/2018/04/03/filter-table/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/images/filter-table-1.gif"&gt;&lt;/p&gt;
&lt;p&gt;GitHub pages makes it easy to share information: just send the URL instead of emailing a file attachment. When I wanted to share the contents of an Excel file this was a natural platform, but with over 1,000 rows of data I needed a way to filter the table on the webpage.&lt;/p&gt;
&lt;p&gt;With my knowledge at the time limited to some basic HTML and very little JavaScript, this is an exercise in hacking together a solution. Keep reading to see how I implemented a solution using the &lt;a href="http://koalyptus.github.io/TableFilter/"&gt;TableFilter&lt;/a&gt; JavaScript library. &lt;/p&gt;
</summary><category term="html"></category><category term="javascript"></category><category term="web"></category><category term="TableFilter"></category></entry><entry><title>xlwings: Use Python and Excel to Calculate Your Mortgage</title><link href="http://matthewkudija.com/blog/2018/03/25/xlwings-mortgage/" rel="alternate"></link><published>2018-03-25T06:00:00-04:00</published><updated>2018-03-25T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-03-25:blog/2018/03/25/xlwings-mortgage/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/images/xlwings-mortgage-1.gif"&gt;&lt;/p&gt;
&lt;p&gt;The Python &lt;a href="https://www.xlwings.org/"&gt;xlwings&lt;/a&gt; library provides easy interaction between Python and a Microsoft Excel workbook. In this example, I'll demonstrate using Excel as a wrapper around a Python function, with xlwings providing the link between the two.&lt;/p&gt;
</summary><category term="python"></category><category term="pandas"></category><category term="xlwings"></category><category term="excel"></category></entry><entry><title>Automation Using Makefiles</title><link href="http://matthewkudija.com/blog/2018/03/15/makefile-automation/" rel="alternate"></link><published>2018-03-15T06:00:00-04:00</published><updated>2018-03-15T06:00:00-04:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-03-15:blog/2018/03/15/makefile-automation/</id><summary type="html">

&lt;p&gt;Makefiles provide an easy way to group multiple terminal commands into a single command using &lt;code&gt;make &amp;lt;command&amp;gt;&lt;/code&gt;. This gives a brief overview with just enough information to write your first Makefile.&lt;/p&gt;
</summary><category term="python"></category><category term="makefile"></category><category term="make"></category><category term="automation"></category></entry><entry><title>Carpet Plots</title><link href="http://matthewkudija.com/blog/2018/02/14/carpet-plots/" rel="alternate"></link><published>2018-02-14T06:00:00-05:00</published><updated>2018-02-14T06:00:00-05:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2018-02-14:blog/2018/02/14/carpet-plots/</id><summary type="html">&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/images/carpet.jpeg"&gt;&lt;/p&gt;
&lt;style type="text/css"&gt;/*!
*
* IPython notebook
*
*/
/* CSS font colors for translated ANSI colors. */
.ansibold {
  font-weight: bold;
}
/* use dark versions for foreground, to improve visibility */
.ansiblack {
  color: black;
}
.ansired {
  color: darkred;
}
.ansigreen {
  color: darkgreen;
}
.ansiyellow {
  color: #c4a000;
}
.ansiblue {
  color: darkblue;
}
.ansipurple {
  color: darkviolet;
}
.ansicyan {
  color: steelblue;
}
.ansigray {
  color: gray;
}
/* and light for background, for the …&lt;/style&gt;</summary><category term="carpet"></category><category term="plotly"></category><category term="pandas"></category><category term="pd.melt()"></category><category term="matplotlib"></category><category term="3Dplot"></category></entry><entry><title>Travel Map With Basemap</title><link href="http://matthewkudija.com/blog/2016/12/17/travel-map-basemap/" rel="alternate"></link><published>2016-12-17T06:00:00-05:00</published><updated>2016-12-17T06:00:00-05:00</updated><author><name>Matthew Kudija</name></author><id>tag:matthewkudija.com,2016-12-17:blog/2016/12/17/travel-map-basemap/</id><summary type="html">

&lt;p&gt;&lt;img alt src="http://matthewkudija.com/blog/images/2016_travel.png"&gt;&lt;/p&gt;
&lt;p&gt;For me 2016 was quite a year for travel: a cross-country road trip, visiting family in Alabama, and a trip to Europe for work. In this example I'll show how to illustrate a year of travel using Python's Basemap library.&lt;/p&gt;
</summary><category term="basemap"></category><category term="map"></category><category term="python"></category><category term="matplotlib"></category></entry></feed>